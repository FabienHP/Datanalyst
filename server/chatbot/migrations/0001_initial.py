# Generated by Django 5.0.6 on 2024-06-21 06:29

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='AccessRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('profile', models.CharField(choices=[('CD', 'CD'), ('BT', 'BT')], max_length=2)),
                ('email', models.EmailField(max_length=254)),
                ('site', models.CharField(choices=[('CDG', 'CDG'), ('VLR', 'VLR'), ('ORY', 'ORY')], max_length=3)),
                ('reason', models.CharField(choices=[('authorization', 'Authorization'), ('password_reset', 'Password Reset')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=8)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Instrument',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(max_length=255)),
                ('part_number', models.CharField(blank=True, max_length=255, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=255, null=True)),
                ('specifications', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('Valid', 'Valid'), ('Obsolete', 'Obsolete')], max_length=8)),
                ('contact_email', models.EmailField(blank=True, max_length=254, null=True)),
                ('documentation_url', models.URLField(blank=True, null=True)),
                ('equivalent_id', models.IntegerField(blank=True, null=True)),
                ('comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('characteristics', models.JSONField(blank=True, null=True)),
                ('performance', models.JSONField(blank=True, null=True)),
                ('physical', models.JSONField(blank=True, null=True)),
                ('input_output', models.JSONField(blank=True, null=True)),
                ('software', models.JSONField(blank=True, null=True)),
                ('other', models.JSONField(blank=True, null=True)),
                ('display', models.JSONField(blank=True, null=True)),
                ('bandwidth', models.CharField(blank=True, max_length=255, null=True)),
                ('channels', models.CharField(blank=True, max_length=255, null=True)),
                ('sample_rate', models.CharField(blank=True, max_length=255, null=True)),
                ('record_length', models.CharField(blank=True, max_length=255, null=True)),
                ('vertical_resolution', models.CharField(blank=True, max_length=255, null=True)),
                ('vertical_sensitivity', models.CharField(blank=True, max_length=255, null=True)),
                ('dc_vertical_accuracy', models.CharField(blank=True, max_length=255, null=True)),
                ('max_input_voltage', models.CharField(blank=True, max_length=255, null=True)),
                ('time_base_range', models.CharField(blank=True, max_length=255, null=True)),
                ('time_base_accuracy', models.CharField(blank=True, max_length=255, null=True)),
                ('horizontal_zoom', models.CharField(blank=True, max_length=255, null=True)),
                ('io_interfaces', models.JSONField(blank=True, null=True)),
                ('acquisition_modes', models.JSONField(blank=True, null=True)),
                ('trigger_system', models.JSONField(blank=True, null=True)),
                ('cursors', models.JSONField(blank=True, null=True)),
                ('automatic_waveform_measurements', models.JSONField(blank=True, null=True)),
                ('waveform_math', models.JSONField(blank=True, null=True)),
                ('autoset_menu', models.JSONField(blank=True, null=True)),
                ('display_characteristics', models.JSONField(blank=True, null=True)),
                ('environmental_safety', models.JSONField(blank=True, null=True)),
                ('frequency_range', models.CharField(blank=True, max_length=255, null=True)),
                ('voltage_reference', models.CharField(blank=True, max_length=255, null=True)),
                ('output_voltage_range', models.CharField(blank=True, max_length=255, null=True)),
                ('output_current', models.CharField(blank=True, max_length=255, null=True)),
                ('current_limit', models.CharField(blank=True, max_length=255, null=True)),
                ('line_regulation', models.CharField(blank=True, max_length=255, null=True)),
                ('constant_current_range', models.CharField(blank=True, max_length=255, null=True)),
                ('current_accuracy', models.CharField(blank=True, max_length=255, null=True)),
                ('max_voltage_power', models.CharField(blank=True, max_length=255, null=True)),
                ('short_circuit_current', models.CharField(blank=True, max_length=255, null=True)),
                ('measurement_accuracy', models.JSONField(blank=True, null=True)),
                ('voltage_range', models.CharField(blank=True, max_length=255, null=True)),
                ('resolution', models.CharField(blank=True, max_length=255, null=True)),
                ('accuracy', models.CharField(blank=True, max_length=255, null=True)),
                ('dc_voltage_measurement', models.CharField(blank=True, max_length=255, null=True)),
                ('ac_voltage_measurement', models.CharField(blank=True, max_length=255, null=True)),
                ('signal_sampling', models.JSONField(blank=True, null=True)),
                ('frequency_measurement_range', models.CharField(blank=True, max_length=255, null=True)),
                ('amplitude_range', models.JSONField(blank=True, null=True)),
                ('offset_range', models.JSONField(blank=True, null=True)),
                ('sine_distortion', models.JSONField(blank=True, null=True)),
                ('pulse_width', models.JSONField(blank=True, null=True)),
                ('angle_range', models.CharField(blank=True, max_length=255, null=True)),
                ('reference_input', models.JSONField(blank=True, null=True)),
                ('output_characteristics', models.JSONField(blank=True, null=True)),
                ('angle_measurement_range', models.CharField(blank=True, max_length=255, null=True)),
                ('input_characteristics', models.JSONField(blank=True, null=True)),
                ('wavelength_range', models.CharField(blank=True, max_length=255, null=True)),
                ('attenuation_range', models.CharField(blank=True, max_length=255, null=True)),
                ('insertion_loss', models.CharField(blank=True, max_length=255, null=True)),
                ('fibre_type', models.CharField(blank=True, max_length=255, null=True)),
                ('connector_type', models.CharField(blank=True, max_length=255, null=True)),
                ('bidirectional_switch', models.BooleanField(blank=True, null=True)),
                ('power_range', models.CharField(blank=True, max_length=255, null=True)),
                ('interface', models.JSONField(blank=True, null=True)),
                ('parameters', models.JSONField(blank=True, null=True)),
                ('pattern', models.JSONField(blank=True, null=True)),
                ('pressure_supply', models.CharField(blank=True, max_length=255, null=True)),
                ('vacuum_supply', models.CharField(blank=True, max_length=255, null=True)),
                ('input_output_ports', models.JSONField(blank=True, null=True)),
                ('pressure_range', models.JSONField(blank=True, null=True)),
                ('pressure_generation_measurement', models.JSONField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('profile', models.CharField(choices=[('CD', 'CD'), ('BT', 'BT')], max_length=2)),
                ('role', models.CharField(choices=[('user', 'User'), ('admin', 'Admin')], default='user', max_length=5)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('site', models.CharField(choices=[('CDG', 'CDG'), ('VLR', 'VLR'), ('ORY', 'ORY')], max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Conversation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='documents/')),
                ('md5_hash', models.CharField(max_length=32, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Equivalent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.instrument')),
            ],
        ),
        migrations.CreateModel(
            name='InstrumentFeature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('feature_name', models.CharField(max_length=255)),
                ('value', models.CharField(max_length=255)),
                ('unit', models.CharField(max_length=50)),
                ('instrument', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.instrument')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('type', models.CharField(max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('conversation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chatbot.conversation')),
            ],
        ),
        migrations.CreateModel(
            name='PasswordReset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expiration_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
